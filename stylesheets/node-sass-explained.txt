NODE SASS NOTES

-- Code

In app.js there's:

	// SASS Engine
	var sass = require("node-sass-middleware");
	app.use(sass({
	    src: path.join(__dirname, "sass"),
	    dest: path.join(__dirname, "public"),
	    debug: true,
	    prefix: "/css"
	}));
	
This always has to come before the static module setup, because the static module will load the static files into memory. If the scss isn't compiled, those files will appear AFTER the static module has loaded all the files, which doesn't work.

--

-- File Names and Prefix

The src is the source folder where the search for the scss/sass files will be based. So, if we have
	
	src: path.join(__dirname, "sass")

and the server makes a request to

	<link rel="stylesheet" href="css/sass.css" />
	
the scss file will be found in

	/sass/css/sass.scss
	
So, the path in the href is tacked onto the end of the src.

The dest is the destination where the compiled .css file will be put. So if we have

	 dest: path.join(__dirname, "public")
	 
and the server makes a request to

	<link rel="stylesheet" href="css/sass.css" />
	
the css file will be searched in

	/public/css/sass.css
	
The issue is that it is redundant to store all the scss files in 

	/sass/css
	
It would make more sense to store them all in

	/sass
	
To combat this, we can specify some "throw away" parts of the file path using

	prefix: "/css"
	 
So, a request to 
	 
	 <link rel="stylesheet" href="css/sass.css" />
	 
Will look in

	source: /sass/sass.scss
	destination: /public/css/sass.css
	
Note that /sass is the source folder, and /public is the dest folder, but when looking in the source folder for "css/sass.scss", the "css" part is thrown out using this prefix.

--
	 
	